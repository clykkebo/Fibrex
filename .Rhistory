# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Family, y = Abundance+pseudocount, fill = fct_rev(feed))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COLFEED, breaks = c("LF","HF")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw() + labs(fill = "Feed")
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY))
p.dT
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 150, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 150, height = 200, dpi = 300))
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Species" #c("Species","Genus","Family")
MTRL <- "Feces" #c("Feces","Ileum","Cecum")
DAY <- "d0" #c("d0","d08","d12","d16","d20","d21")
FEED <- "HF" #c("LF","HF")
#TREAT <- "CTRL" #c("CTRL","PFOS")
PDI <- "treatment" #c("treatment","feed")
SUBNAME <- "Feces_d0" #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Filter samples (if needed)
# phy.sp <- subset_samples(phy.sp, material == MTRL)
if (exists("FEED") == TRUE) {
phy.sp <- subset_samples(phy.sp, feed == FEED)
print(paste0("Data contains type ",FEED," feed."))
} else {
print("Data contains both feed LF and HF.")
}
if (exists("DAY") == TRUE) {
phy.sp <- subset_samples(phy.sp, day %in% DAY)
print(paste0("Data contains samples from day ",DAY,"."))
} else {
print("Data contains all days.")
}
if (exists("TREAT") == TRUE) {
phy.sp <- subset_samples(phy.sp, treatment == TREAT)
print(paste0("Data contains only ",TREAT," treatment groups."))
} else {
print("Data contains all treatment groups.")
}
# Filter data
filt <- preDA(data = phy.sp, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.tta(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
write.csv(filt.p5,paste0("plots/differential_abundance/",SUBNAME,"/stats_",MTRL,"_",DAY,"_",FEED,"_",PDI,"_",LVL,".csv"))
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Species, y = Abundance+pseudocount, fill = fct_rev(feed_treat))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("Control","PFOS"), breaks = c("LF_CTRL","LF_PFOS")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw()
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY," ",FEED))
print(p.dT)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Genus" #c("Species","Genus","Family")
MTRL <- "Feces" #c("Feces","Ileum","Cecum")
DAY <- "d0" #c("d0","d08","d12","d16","d20","d21")
FEED <- "HF" #c("LF","HF")
#TREAT <- "CTRL" #c("CTRL","PFOS")
PDI <- "treatment" #c("treatment","feed")
SUBNAME <- "Feces_d0" #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Filter samples (if needed)
# phy.ge <- subset_samples(phy.ge, material == MTRL)
if (exists("FEED") == TRUE) {
phy.ge <- subset_samples(phy.ge, feed == FEED)
print(paste0("Data contains type ",FEED," feed."))
} else {
print("Data contains both feed LF and HF.")
}
if (exists("DAY") == TRUE) {
phy.ge <- subset_samples(phy.ge, day %in% DAY)
print(paste0("Data contains samples from day ",DAY,"."))
} else {
print("Data contains all days.")
}
if (exists("TREAT") == TRUE) {
phy.ge <- subset_samples(phy.ge, treatment == TREAT)
print(paste0("Data contains only ",TREAT," treatment groups."))
} else {
print("Data contains all treatment groups.")
}
# Filter data
filt <- preDA(data = phy.ge, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.tta(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
write.csv(filt.p5,paste0("plots/differential_abundance/",SUBNAME,"/stats_",MTRL,"_",DAY,"_",FEED,"_",PDI,"_",LVL,".csv"))
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Genus, y = Abundance+pseudocount, fill = fct_rev(feed_treat))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("Control","PFOS"), breaks = c("LF_CTRL","LF_PFOS")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw()
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY," ",FEED))
print(p.dT)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Family" #c("Species","Genus","Family")
MTRL <- "Feces" #c("Feces","Ileum","Cecum")
DAY <- "d0" #c("d0","d08","d12","d16","d20","d21")
FEED <- "HF" #c("LF","HF")
#TREAT <- "CTRL" #c("CTRL","PFOS")
PDI <- "treatment" #c("treatment","feed")
SUBNAME <- "Feces_d0" #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Filter samples (if needed)
# phy.fa <- subset_samples(phy.fa, material == MTRL)
if (exists("FEED") == TRUE) {
phy.fa <- subset_samples(phy.fa, feed == FEED)
print(paste0("Data contains type ",FEED," feed."))
} else {
print("Data contains both feed LF and HF.")
}
if (exists("DAY") == TRUE) {
phy.fa <- subset_samples(phy.fa, day %in% DAY)
print(paste0("Data contains samples from day ",DAY,"."))
} else {
print("Data contains all days.")
}
if (exists("TREAT") == TRUE) {
phy.fa <- subset_samples(phy.fa, treatment == TREAT)
print(paste0("Data contains only ",TREAT," treatment groups."))
} else {
print("Data contains all treatment groups.")
}
# Filter data
filt <- preDA(data = phy.fa, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.ttc(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
write.csv(filt.p5,paste0("plots/differential_abundance/",SUBNAME,"/stats_",MTRL,"_",DAY,"_",FEED,"_",PDI,"_",LVL,".csv"))
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Family, y = Abundance+pseudocount, fill = fct_rev(feed_treat))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("Control","PFOS"), breaks = c("LF_CTRL","LF_PFOS")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw()
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY," ",FEED))
print(p.dT)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Species" #c("Species","Genus","Family")
MTRL <- "Feces" #c("Feces","Ileum","Cecum")
DAY <- "d0" #c("d0","d08","d12","d16","d20","d21")
FEED <- "LF" #c("LF","HF")
#TREAT <- "CTRL" #c("CTRL","PFOS")
PDI <- "treatment" #c("treatment","feed")
SUBNAME <- "Feces_d0" #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Filter samples (if needed)
# phy.sp <- subset_samples(phy.sp, material == MTRL)
if (exists("FEED") == TRUE) {
phy.sp <- subset_samples(phy.sp, feed == FEED)
print(paste0("Data contains type ",FEED," feed."))
} else {
print("Data contains both feed LF and HF.")
}
if (exists("DAY") == TRUE) {
phy.sp <- subset_samples(phy.sp, day %in% DAY)
print(paste0("Data contains samples from day ",DAY,"."))
} else {
print("Data contains all days.")
}
if (exists("TREAT") == TRUE) {
phy.sp <- subset_samples(phy.sp, treatment == TREAT)
print(paste0("Data contains only ",TREAT," treatment groups."))
} else {
print("Data contains all treatment groups.")
}
# Filter data
filt <- preDA(data = phy.sp, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.tta(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
write.csv(filt.p5,paste0("plots/differential_abundance/",SUBNAME,"/stats_",MTRL,"_",DAY,"_",FEED,"_",PDI,"_",LVL,".csv"))
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Species, y = Abundance+pseudocount, fill = fct_rev(feed_treat))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("Control","PFOS"), breaks = c("LF_CTRL","LF_PFOS")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw()
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY," ",FEED))
print(p.dT)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Genus" #c("Species","Genus","Family")
MTRL <- "Feces" #c("Feces","Ileum","Cecum")
DAY <- "d0" #c("d0","d08","d12","d16","d20","d21")
FEED <- "LF" #c("LF","HF")
#TREAT <- "CTRL" #c("CTRL","PFOS")
PDI <- "treatment" #c("treatment","feed")
SUBNAME <- "Feces_d0" #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Filter samples (if needed)
# phy.ge <- subset_samples(phy.ge, material == MTRL)
if (exists("FEED") == TRUE) {
phy.ge <- subset_samples(phy.ge, feed == FEED)
print(paste0("Data contains type ",FEED," feed."))
} else {
print("Data contains both feed LF and HF.")
}
if (exists("DAY") == TRUE) {
phy.ge <- subset_samples(phy.ge, day %in% DAY)
print(paste0("Data contains samples from day ",DAY,"."))
} else {
print("Data contains all days.")
}
if (exists("TREAT") == TRUE) {
phy.ge <- subset_samples(phy.ge, treatment == TREAT)
print(paste0("Data contains only ",TREAT," treatment groups."))
} else {
print("Data contains all treatment groups.")
}
# Filter data
filt <- preDA(data = phy.ge, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.tta(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
write.csv(filt.p5,paste0("plots/differential_abundance/",SUBNAME,"/stats_",MTRL,"_",DAY,"_",FEED,"_",PDI,"_",LVL,".csv"))
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Genus, y = Abundance+pseudocount, fill = fct_rev(feed_treat))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("Control","PFOS"), breaks = c("LF_CTRL","LF_PFOS")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw()
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY," ",FEED))
print(p.dT)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Family" #c("Species","Genus","Family")
MTRL <- "Feces" #c("Feces","Ileum","Cecum")
DAY <- "d0" #c("d0","d08","d12","d16","d20","d21")
FEED <- "LF" #c("LF","HF")
#TREAT <- "CTRL" #c("CTRL","PFOS")
PDI <- "treatment" #c("treatment","feed")
SUBNAME <- "Feces_d0" #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Filter samples (if needed)
# phy.fa <- subset_samples(phy.fa, material == MTRL)
if (exists("FEED") == TRUE) {
phy.fa <- subset_samples(phy.fa, feed == FEED)
print(paste0("Data contains type ",FEED," feed."))
} else {
print("Data contains both feed LF and HF.")
}
if (exists("DAY") == TRUE) {
phy.fa <- subset_samples(phy.fa, day %in% DAY)
print(paste0("Data contains samples from day ",DAY,"."))
} else {
print("Data contains all days.")
}
if (exists("TREAT") == TRUE) {
phy.fa <- subset_samples(phy.fa, treatment == TREAT)
print(paste0("Data contains only ",TREAT," treatment groups."))
} else {
print("Data contains all treatment groups.")
}
# Filter data
filt <- preDA(data = phy.fa, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.ttc(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
write.csv(filt.p5,paste0("plots/differential_abundance/",SUBNAME,"/stats_",MTRL,"_",DAY,"_",FEED,"_",PDI,"_",LVL,".csv"))
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
p.dif <- ggplot(DAm, aes(x = Family, y = Abundance+pseudocount, fill = fct_rev(feed_treat))) + geom_boxplot() + scale_y_log10() + coord_flip() + scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("Control","PFOS"), breaks = c("LF_CTRL","LF_PFOS")) + facet_grid(Phylum ~ . , scales = "free_y", space = "free") + theme_bw()
p.dT <- p.dif + ggtitle(paste0("Differential abundance on ",LVL," level for ",MTRL," ",DAY," ",FEED))
print(p.dT)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".pdf"), p.dT, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",FEED,"_",PDI,"_",LVL,".png"), p.dT, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
# Collected figures for Families showing significant differences
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Genus"
LVLS <- c("Genus","Family")
SUBNAME <- "Feces"
PDI <- "feed_treat"
TX <- "Enterobacteriaceae"
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Load agglomorated subset
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
for (LVL in LVLS) {
# Filter data
if (LVL == "Genus") {
filt <- preDA(data = phy.ge, min.reads = 20, min.samples = 4)
} else if (LVL == "Family") {
filt <- preDA(data = phy.fa, min.reads = 20, min.samples = 4)
}
# Run tha selected analysis Wilcoxon
filt.DA <- DA.wil(filt, predictor = "feed")
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
filt.t <- subset_taxa(filt.ra, Family == TX)
# Melt the data
t.melt <- psmelt(filt.t)
# Create pseudocounts
pseudocount <- min(t.melt$Abundance[t.melt$Abundance != 0])
# Sort samples to phylogenetic levels (alphabetically)
if (LVL == "Genus") {
t.sorted <- t.melt %>% select(Phylum:Genus) %>% arrange(Phylum, Class, Order, Family, Genus)
genus.sorted <- as.character(unique(t.sorted$Genus))
t.melt$genus_new <- factor(t.melt$Genus, levels = genus.sorted)
levels(t.melt$genus_new) %>% head
} else if (LVL == "Family") {
t.sorted <- t.melt %>% select(Phylum:Family) %>% arrange(Phylum, Class, Order, Family)
fam.sorted <- as.character(unique(t.sorted$Family))
t.melt$fam_new <- factor(t.melt$Family, levels = fam.sorted)
levels(t.melt$genus_new) %>% head
}
# Statistics
stat.in <- t.melt %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- t.melt %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
# Plot data and save as output formats
p <- ggplot(t.melt, aes(feed, Abundance+pseudocount)) +
geom_boxplot(aes(fill = feed_treat), color = "black") +
scale_y_log10(name = "Abundance+pseudocount (log10)", expand = expansion(mult = c(0, 0.075)), labels =function(x) paste0(x, "%")) +
scale_fill_manual(name = "Group", values = params$COL1,
breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS"),
labels = c("HF-CTRL","HF-PFOS","LF-CTRL","LF-PFOS")) +
facet_grid(.data[[LVL]] ~ day, space = "free",
labeller = labeller(day = c("d0" = "Day 0","d08" = "Day 8","d12" = "Day 12","d16" = "Day 16","d21" = "Day 21"))) +
theme_pubr(border = TRUE) +
guides(color = "none") +
theme(axis.title.x = element_blank())
p
if (SUBNAME == "Feces") {
if (LVL == "Genus") {
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, y.position = c(1.1,1.4,1.2,1.3,1.3,0.01,0.01))
} else {
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
}
} else if (SUBNAME %in% c("Ileum","Cecum")) {
p.stat <- p + #stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
}
print(p.stat)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",LVL,"_",TX,".pdf"), p.stat, device = "pdf", units = "mm", width = 200, height = 100, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",LVL,"_",TX,".png"), p.stat, device = "png", units = "mm", width = 200, height = 100, dpi = 300))
save(stat.in, stat.out, p.stat, file = paste0("plots/differential_abundance/",SUBNAME,"/plot_stat_",SUBNAME,"_",LVL,".Rdata"))
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
dat <- as.data.frame(params)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(tidyverse)
library(phyloseq)
library(decontam)
library(pals)
library(ggpubr)
library(vegan)
library(phangorn)
library(kableExtra)
library(plotly)
library(rstatix)
library(forcats)
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(DAtest)
library(ggrepel)
# Save params
saveRDS(params, file = "R_objects/animal_params.RDS")
params <- readRDS("R_objects/animal_params.RDS")
tmp <- unlist(params)
dat <- data.frame(Parameter = names(tmp), Value = unname(tmp))
kbl(dat, row.names = F) %>% kable_classic(lightable_options = "striped")
params <- readRDS("R_objects/comp_params.RDS")
dat <- as.data.frame(params)
kbl(dat, row.names = F) %>% kable_classic(lightable_options = "striped")
params <- readRDS("R_objects/comp_params.RDS")
tmp <- unlist(params)
dat <- data.frame(Parameter = names(tmp), Value = unname(tmp))
kbl(dat, row.names = F) %>% kable_classic(lightable_options = "striped")
params <- readRDS("R_objects/comp_params.RDS")
tmp <- unlist(params)
dat <- data.frame(Parameter = names(tmp), Value = unname(tmp))
kbl(dat, row.names = F) %>% kable_classic(lightable_options = "striped")
install.packages(c("abind", "BiocManager", "caTools", "clarabel", "corrplot", "cpp11", "curl", "data.table", "Deriv", "DescTools", "digest", "emmeans", "energy", "expm", "ggrepel", "gmp", "matrixStats", "microbenchmark", "minqa", "mvtnorm", "openssl", "openxlsx", "ps", "ragg", "RcppArmadillo", "RcppEigen", "RcppParallel", "rmarkdown", "vegan", "xfun", "yulab.utils"))
