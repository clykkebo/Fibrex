add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = params$batch, y = "Shannon", color = params$batch, palette = "jco", add = "jitter")
p.sdi <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# Test Faith phylogenetic distance
FORMULA <- as.formula(paste("FaithPD ~", params$batch, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = params$batch) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = params$batch, y = "FaithPD",
color = params$batch, palette = "jco",
add = "jitter")
p.fpd <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
adiv_batch <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
adiv_batch <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
suppressMessages(ggsave(filename = "plots/adiv_batch.png",plot = adiv_batch, device = "png"))
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed_treat"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed_treat, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feedfeed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "treatment"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, treatment, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$feed == 8,]
adat <- adat[adat$feed == AIN-93G,]
adat <- adat[adat$treatment == PFOS,]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "treatment"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, treatment, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$treatment == PFOS,]
adat <- adat[adat$material == Feces,]
#### Test project variable
### Observed richness
FORMULA <- as.formula(paste("Observed ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "Observed",
color = TEST.VAR, palette = "jco",
add = "jitter")
p.obs <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
### Test shannon diversity index
# Run statistical test of batch effect
FORMULA <- as.formula(paste("Shannon ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "Shannon", color = TEST.VAR, palette = "jco", add = "jitter")
p.sdi <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# Test Faith phylogenetic distance
FORMULA <- as.formula(paste("FaithPD ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
p.fpd <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# If there is a significant batch effect, then it will be necessary to correct following tests for this effect.
filename <- paste0("plots/adiv_",TEST.VAR,".png")
adiv_plot <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
adiv_plot + ggtitle(paste0("Difference in alpha diversity between ",TEST.VAR,":"))
suppressMessages(ggsave(filename = filename, plot = adiv_plot, device = "png"))
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
#### Test project variable
### Observed richness
FORMULA <- as.formula(paste("Observed ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
### Test shannon diversity index
# Run statistical test of batch effect
FORMULA <- as.formula(paste("Shannon ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "Shannon", color = TEST.VAR, palette = "jco", add = "jitter")
p.sdi <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# Test Faith phylogenetic distance
FORMULA <- as.formula(paste("FaithPD ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "FaithPD",
color = TEST.VAR, palette = "jco",
add = "jitter")
p.fpd <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# If there is a significant batch effect, then it will be necessary to correct following tests for this effect.
filename <- paste0("plots/adiv_",TEST.VAR,".png")
adiv_plot <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
adiv_plot + ggtitle(paste0("Difference in alpha diversity between ",TEST.VAR,":"))
suppressMessages(ggsave(filename = filename, plot = adiv_plot, device = "png"))
adat <- adat[adat$material == "Feces",]
#### Test project variable
### Observed richness
FORMULA <- as.formula(paste("Observed ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
### Test shannon diversity index
# Run statistical test of batch effect
FORMULA <- as.formula(paste("Shannon ~", TEST.VAR, sep = " "))
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
p.sdi <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# Test Faith phylogenetic distance
FORMULA <- as.formula(paste("FaithPD ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "FaithPD",
color = TEST.VAR, palette = "jco",
add = "jitter")
p.fpd <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# If there is a significant batch effect, then it will be necessary to correct following tests for this effect.
filename <- paste0("plots/adiv_",TEST.VAR,".png")
adiv_plot <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
adiv_plot <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
adiv_plot + ggtitle(paste0("Difference in alpha diversity between ",TEST.VAR,":"))
suppressMessages(ggsave(filename = filename, plot = adiv_plot, device = "png"))
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$material == "cecum",]
#### Test project variable
### Observed richness
FORMULA <- as.formula(paste("Observed ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
adat <- adat[adat$material == "Cecum",]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$material == "Cecum",]
#### Test project variable
### Observed richness
FORMULA <- as.formula(paste("Observed ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "Observed",
color = TEST.VAR, palette = "jco",
add = "jitter")
p.obs <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
### Test shannon diversity index
# Run statistical test of batch effect
FORMULA <- as.formula(paste("Shannon ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "Shannon", color = TEST.VAR, palette = "jco", add = "jitter")
p.sdi <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# Test Faith phylogenetic distance
FORMULA <- as.formula(paste("FaithPD ~", TEST.VAR, sep = " "))
compare_means(FORMULA,  data = adat, method = "kruskal")
## If significant:
# Perform pairwise comparisons
stat.test <- adat %>%
wilcox_test(FORMULA) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_x_position(x = TEST.VAR) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
# Format for
if (sum(stat.test$p.adj.signif != "ns") == 0) {
stat.sig <- stat.test %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
} else {
stat.sig <- stat.test[stat.test$p.adj.signif != "ns",] %>%
add_y_position(step.increase = 0.25) %>%
mutate(y.position = seq(min(y.position), max(y.position),length.out = n()))
}
# Create plot
p <- ggboxplot(adat, x = TEST.VAR, y = "FaithPD",
color = TEST.VAR, palette = "jco",
add = "jitter")
p.fpd <- p + stat_pvalue_manual(stat.sig, label = "p.adj.format",tip.length = 0)
# If there is a significant batch effect, then it will be necessary to correct following tests for this effect.
filename <- paste0("plots/adiv_",TEST.VAR,".png")
adiv_plot <- ggarrange(p.obs,p.sdi, p.fpd, nrow = 1, labels = c("A)","B)","C)"), common.legend = TRUE,legend = "bottom")
adiv_plot + ggtitle(paste0("Difference in alpha diversity between ",TEST.VAR,":"))
suppressMessages(ggsave(filename = filename, plot = adiv_plot, device = "png"))
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$material == "Feces", "Cecum", "Ileum"]
adat <- adat[adat$material == "Feces"]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$material == "Feces"]
adat <- adat[adat$material == "Cecum"]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feedtreat"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "feed_treat"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, feed_treat, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$day == 0]
params <- readRDS("R_objects/Adiv_params.RDS")
# Load data
load("R_objects/AlphaDiversity.RData")
TEST.VAR <- "day"
# Remove samples with incomplete metadata
adat <- adat[!is.na(adat[,TEST.VAR]),]
adat[,TEST.VAR] <- as.factor(adat[,TEST.VAR])
### Determine if any batch effect might influence your data
# Calculate distribution counts
freq.t <- with(adat, table(run, day, exclude = NULL))
freq.t
# Determine distribution percentages
prop.table(freq.t,2)*100
# Test if any difference is significant (if not significant the batch effect should be negligible)
chisq_test(freq.t)
adat <- adat[adat$material == "Feces"]
