for (LVL in LVLS) {
if (LVL == "Species") {
phy.used <- phy.sp
} else if (LVL == "Genus") {
phy.used <- phy.ge
} else if (LVL == "Family") {
phy.used <- phy.fa
}
# Filter data
filt <- preDA(data = phy.used, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.kru(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
# Statistics
stat.in <- DAm %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- DAm %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
p <- ggplot(DAm, aes(x = feed, y = Abundance+pseudocount)) +
geom_boxplot(aes(fill = fct_rev(feed_treat))) +
scale_y_log10() +
#    coord_flip() +
scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("HF_CTRL" ="HF-CTRL","HF_PFOS" = "HF-PFOS","LF_CTRL" = "LF-CTRL","LF_PFOS" = "LF_PFOS"), breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS")) +
facet_grid(day ~ .data[[LVL]] , scales = "free_y", space = "free", labeller = labeller(day = c("d08" = "Day 8","d21" = "Day 21"))) +
theme_pubr(border = TRUE)
p
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
p.stat
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.stat, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".png"), p.stat, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Family"
LVLS <- c("Species","Genus","Family")
MTRL <- "Ileum_LF" #c("Feces","Ileum","Cecum")
PDI <- "feed_treat" #c("treatment","feed")
SUBNAME <- "Ileum_LF"
SUBNAMES <- c("Ileum_HF","Ileum_LF","Cecum_HF","Cecum_LF") #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
for (SUBNAME in SUBNAMES) {
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
for (LVL in LVLS) {
if (LVL == "Species") {
phy.used <- phy.sp
} else if (LVL == "Genus") {
phy.used <- phy.ge
} else if (LVL == "Family") {
phy.used <- phy.fa
}
# Filter data
filt <- preDA(data = phy.used, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.kru(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
# Statistics
stat.in <- DAm %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- DAm %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
p <- ggplot(DAm, aes(x = feed, y = Abundance+pseudocount)) +
geom_boxplot(aes(fill = fct_rev(feed_treat))) +
scale_y_log10() +
#    coord_flip() +
scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("HF_CTRL" ="HF-CTRL","HF_PFOS" = "HF-PFOS","LF_CTRL" = "LF-CTRL","LF_PFOS" = "LF_PFOS"), breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS")) +
facet_grid(day ~ .data[[LVL]] , scales = "free_y", space = "free", labeller = labeller(day = c("d08" = "Day 8","d21" = "Day 21"))) +
theme_pubr(border = TRUE)
p
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
p.stat
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.stat, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".png"), p.stat, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
print(message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,".")))
} else if (exists("TREAT") == TRUE) {
print(message(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,".")))
}
}
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Family"
LVLS <- c("Species","Genus","Family")
MTRL <- "Ileum_LF" #c("Feces","Ileum","Cecum")
PDI <- "feed_treat" #c("treatment","feed")
SUBNAME <- "Ileum_LF"
SUBNAMES <- c("Ileum_HF","Ileum_LF","Cecum_HF","Cecum_LF") #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
for (SUBNAME in SUBNAMES) {
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
for (LVL in LVLS) {
if (LVL == "Species") {
phy.used <- phy.sp
} else if (LVL == "Genus") {
phy.used <- phy.ge
} else if (LVL == "Family") {
phy.used <- phy.fa
}
# Filter data
filt <- preDA(data = phy.used, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.kru(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
# Statistics
stat.in <- DAm %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- DAm %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
p <- ggplot(DAm, aes(x = feed, y = Abundance+pseudocount)) +
geom_boxplot(aes(fill = fct_rev(feed_treat))) +
scale_y_log10() +
#    coord_flip() +
scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("HF_CTRL" ="HF-CTRL","HF_PFOS" = "HF-PFOS","LF_CTRL" = "LF-CTRL","LF_PFOS" = "LF_PFOS"), breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS")) +
facet_grid(day ~ .data[[LVL]] , scales = "free_y", space = "free", labeller = labeller(day = c("d08" = "Day 8","d21" = "Day 21"))) +
theme_pubr(border = TRUE)
p
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
p.stat
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.stat, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".png"), p.stat, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
if (exists("FEED") == TRUE) {
print(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for feed ",FEED,"."))
} else if (exists("TREAT") == TRUE) {
print(paste0("No significant results when testing ",PDI," in ",SUBNAME," subset for treatment ",TREAT,"."))
}
}
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Family"
LVLS <- c("Species","Genus","Family")
MTRL <- "Ileum_LF" #c("Feces","Ileum","Cecum")
PDI <- "feed_treat" #c("treatment","feed")
SUBNAME <- "Ileum_LF"
SUBNAMES <- c("Ileum_HF","Ileum_LF","Cecum_HF","Cecum_LF") #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
for (SUBNAME in SUBNAMES) {
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
for (LVL in LVLS) {
if (LVL == "Species") {
phy.used <- phy.sp
} else if (LVL == "Genus") {
phy.used <- phy.ge
} else if (LVL == "Family") {
phy.used <- phy.fa
}
# Filter data
filt <- preDA(data = phy.used, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.kru(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
# Statistics
stat.in <- DAm %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- DAm %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
p <- ggplot(DAm, aes(x = feed, y = Abundance+pseudocount)) +
geom_boxplot(aes(fill = fct_rev(feed_treat))) +
scale_y_log10() +
#    coord_flip() +
scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("HF_CTRL" ="HF-CTRL","HF_PFOS" = "HF-PFOS","LF_CTRL" = "LF-CTRL","LF_PFOS" = "LF_PFOS"), breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS")) +
facet_grid(day ~ .data[[LVL]] , scales = "free_y", space = "free", labeller = labeller(day = c("d08" = "Day 8","d21" = "Day 21"))) +
theme_pubr(border = TRUE)
p
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
p.stat
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.stat, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".png"), p.stat, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
print(paste0("No significant results when testing ",PDI," in ",SUBNAME,"."))
}
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Family"
LVLS <- c("Species","Genus","Family")
MTRL <- "Ileum_LF" #c("Feces","Ileum","Cecum")
PDI <- "feed_treat" #c("treatment","feed")
SUBNAME <- "Ileum_LF"
SUBNAMES <- c("Ileum_HF","Ileum_LF","Cecum_HF","Cecum_LF") #c("Feces","Feces_LF","Feces_HF","Feces_CTRL","Feces_PFOS","Feces_LF_CTRL","Feces_LF_PFOS","Feces_HF_CTRL","Feces_HF_PFOS",             "Feces_d0","Feces_d08","Feces_d12","Feces_d16","Feces_d20","Feces_d21","Feces_d0d08","Feces_d08d21",             "Ileum","Ileum_LF","Ileum_HF","Cecum","Cecum_LF","Cecum_HF")
for (SUBNAME in SUBNAMES) {
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
for (LVL in LVLS) {
if (LVL == "Species") {
phy.used <- phy.sp
} else if (LVL == "Genus") {
phy.used <- phy.ge
} else if (LVL == "Family") {
phy.used <- phy.fa
}
# Filter data
filt <- preDA(data = phy.used, min.reads = 20, min.samples = 4)
# Run the selected analysis
filt.DA <- DA.kru(filt, predictor = PDI)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
filt.p5 <- filt.DA[filt.DA$pval.adj < 0.05,]
if (any(filt.p5$pval.adj > 0)) {
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature[filt.DA$pval.adj < 0.05], x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Create plot
pseudocount <- min(DAm$Abundance[DAm$Abundance != 0])
# Statistics
stat.in <- DAm %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- DAm %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
p <- ggplot(DAm, aes(x = feed, y = Abundance+pseudocount)) +
geom_boxplot(aes(fill = fct_rev(feed_treat))) +
scale_y_log10() +
#    coord_flip() +
scale_fill_manual(values = params$COL1, name = "Treatment", labels = c("HF_CTRL" ="HF-CTRL","HF_PFOS" = "HF-PFOS","LF_CTRL" = "LF-CTRL","LF_PFOS" = "LF_PFOS"), breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS")) +
facet_grid(day ~ .data[[LVL]] , scales = "free_y", space = "free", labeller = labeller(day = c("d08" = "Day 8","d21" = "Day 21"))) +
theme_pubr(border = TRUE)
p
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
p.stat
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.stat, device = "pdf", units = "mm", width = 350, height = 200, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",PDI,"_",LVL,".png"), p.stat, device = "png", units = "mm", width = 350, height = 200, dpi = 300))
} else {
print(paste0("No significant results when testing ",PDI," in ",SUBNAME," at ",LVL,"."))
}
}
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
# Collected figures for Families showing significant differences
params <- readRDS("R_objects/comp_params.RDS")
LVL <- "Genus"
LVLS <- c("Genus","Family")
SUBNAME <- "Feces"
PDI <- "feed_treat"
TX <- "Enterobacteriaceae"
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Load agglomorated subset
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
for (LVL in LVLS) {
# Filter data
if (LVL == "Genus") {
filt <- preDA(data = phy.ge, min.reads = 20, min.samples = 4)
} else if (LVL == "Family") {
filt <- preDA(data = phy.fa, min.reads = 20, min.samples = 4)
}
# Run tha selected analysis Wilcoxon
filt.DA <- DA.wil(filt, predictor = "feed")
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
filt.t <- subset_taxa(filt.ra, Family == TX)
# Melt the data
t.melt <- psmelt(filt.t)
# Create pseudocounts
pseudocount <- min(t.melt$Abundance[t.melt$Abundance != 0])
# Sort samples to phylogenetic levels (alphabetically)
if (LVL == "Genus") {
t.sorted <- t.melt %>% select(Phylum:Genus) %>% arrange(Phylum, Class, Order, Family, Genus)
genus.sorted <- as.character(unique(t.sorted$Genus))
t.melt$genus_new <- factor(t.melt$Genus, levels = genus.sorted)
levels(t.melt$genus_new) %>% head
} else if (LVL == "Family") {
t.sorted <- t.melt %>% select(Phylum:Family) %>% arrange(Phylum, Class, Order, Family)
fam.sorted <- as.character(unique(t.sorted$Family))
t.melt$fam_new <- factor(t.melt$Family, levels = fam.sorted)
levels(t.melt$genus_new) %>% head
}
# Statistics
stat.in <- t.melt %>%
group_by(.data[[LVL]], feed, day) %>%
wilcox_test(as.formula("Abundance ~ feed_treat")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.in$y.position <- log10(stat.in$y.position)
stat.in
stat.out <- t.melt %>%
group_by(.data[[LVL]], day) %>%
wilcox_test(as.formula("Abundance ~ feed")) %>%
adjust_pvalue(method = "BH") %>%
add_significance("p.adj") %>%
add_xy_position(x = "feed", dodge = 0.8) %>%
p_format("p.adj", accuracy = 0.0001, trailing.zero = TRUE, new.col = TRUE)
stat.out$y.position <- log10(stat.out$y.position)
stat.out
# Plot data and save as output formats
p <- ggplot(t.melt, aes(feed, Abundance+pseudocount)) +
geom_boxplot(aes(fill = feed_treat), color = "black") +
scale_y_log10(name = "Abundance+pseudocount (log10)", expand = expansion(mult = c(0, 0.075)), labels =function(x) paste0(x, "%")) +
scale_fill_manual(name = "Group", values = params$COL1,
breaks = c("HF_CTRL","HF_PFOS","LF_CTRL","LF_PFOS"),
labels = c("HF-CTRL","HF-PFOS","LF-CTRL","LF-PFOS")) +
facet_grid(.data[[LVL]] ~ day, space = "free",
labeller = labeller(day = c("d0" = "Day 0","d08" = "Day 8","d12" = "Day 12","d16" = "Day 16","d21" = "Day 21"))) +
theme_pubr(border = TRUE) +
guides(color = "none") +
theme(axis.title.x = element_blank())
p
if (SUBNAME == "Feces") {
if (LVL == "Genus") {
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, y.position = c(1.1,1.4,1.2,1.3,1.3,0.01,0.01))
} else {
p.stat <- p + stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
}
} else if (SUBNAME %in% c("Ileum","Cecum")) {
p.stat <- p + #stat_pvalue_manual(stat.in, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE, color = "red") +
stat_pvalue_manual(stat.out, label = "p.adj.signif", tip.length = 0, hide.ns = TRUE)
}
print(p.stat)
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",LVL,"_",TX,".pdf"), p.stat, device = "pdf", units = "mm", width = 200, height = 100, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/diffplot_",SUBNAME,"_",LVL,"_",TX,".png"), p.stat, device = "png", units = "mm", width = 200, height = 100, dpi = 300))
save(stat.in, stat.out, p.stat, file = paste0("plots/differential_abundance/",SUBNAME,"/plot_stat_",SUBNAME,"_",LVL,".Rdata"))
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
params <- readRDS("R_objects/comp_params.RDS")
#Set parameters
PDI <- "samplePFOS_ug"
SUBNAMES <- c("Feces","Cecum") #,"Ileum","Ileum_HF","Ileum_LF","Cecum","Cecum_HF","Cecum_LF"
TX <- "Enterobacteriaceae"
for (SUBNAME in SUBNAMES) {
# Create sub-folder
if (!file.exists(paste0("plots/differential_abundance/",SUBNAME))) dir.create(file.path(getwd(), paste0("plots/differential_abundance/",SUBNAME)))
# Load data
load(paste0("R_objects/Agglomerated_",SUBNAME,".RData"))
#Subset and specify level
LVL <- "Genus"
phy.ge <- subset_samples(phy.ge, treatment == "PFOS" & day != "d0")
phy.used <- phy.ge
F.LVL <- "Genus"
# Subset taxa
phy.used <- subset_taxa(phy.used, Family == TX)
# Filter data
#filt <- preDA(data = phy.used, min.reads = 1, min.samples = 4)
filt <- transform_sample_counts(phy.used, function(x) x/sum(x))
# Run spearman selected analysis
filt.DA <- DA.spe(filt, predictor = PDI, exact = FALSE)
# Evaluate the plot and summary table
table(filt.DA$pval.adj < 0.05)
# Create a subset of the samples
filt.ra <- transform_sample_counts(filt, function(x) x/sum(x)*100)
DA.sig <- prune_taxa(filt.DA$Feature, x = filt.ra)
# melt the data
DAm <- psmelt(DA.sig)
# Add pseudo count
pseudocount <- min(filt.DA$Abundance[filt.DA$Abundance != 0])
# Create plot
p.cor <- ggplot(DAm, aes(x = .data[[PDI]], y = Abundance, color = feed)) +
geom_jitter(aes(alpha = day)) +
geom_smooth(aes(color = feed), method=lm) +
geom_line(aes(color = rat_name)) +
facet_grid("Genus ~ feed", scales = "free") +
scale_y_log10(name = "Abundance (log10)") +
scale_x_continuous("PFOS µg/g in sample") + #liver: 1.717, 2.931, 0.25   Serum: 21.84, 69.92, 10
theme_pubr(border = TRUE) +
scale_color_manual(name = "Feed", values = params$COLFEED)
p.cor
print(p.cor)
# Save output
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/",TX,"_correlation_",SUBNAME,"_",PDI,"_",LVL,".pdf"), p.cor, device = "pdf", units = "mm", width = 150, height = 110, dpi = 300))
suppressMessages(ggsave(paste0("plots/differential_abundance/",SUBNAME,"/",TX,"_correlation_",SUBNAME,"_",PDI,"_",LVL,".png"), p.cor, device = "png", units = "mm", width = 150, height = 110, dpi = 300))
}
# clear the environment and release memory
rm(list = ls(all.names = TRUE))
invisible(gc())
