"0",""
"0","clean_taxa <- function(physeq, tax_remove = ""Phylum"", verbose = TRUE) {"
"0","  tax <- data.frame(tax_table(physeq))"
"0","  "
"0","  # list ASVs that should be removed"
"0","  remove <- is.na(tax[,tax_remove])"
"0","  "
"0","  # remove ASVs"
"0","  phy.out <- prune_taxa(!remove, physeq)"
"0","  "
"0","  # Calculate and print statistics"
"0","  if (verbose) {"
"0","    # Calculate sample sums of original and cleaned"
"0","    output <- data.frame(row.names = sample_names(physeq),"
"0","                         org = sample_sums(physeq),"
"0","    output$removed <- output$org - output$cleaned"
"0","    output$prc_removed <- output$removed*100/output$org"
"0","    "
"0","    # Print output"
"0","    cat(""OVERVIEW OF ASVs REMOVED:\n"", "
"0","        ""Removed ASVs (%):\t"", "
"0","        sum(remove), "
"0","        "" ("", "
"0","        round(sum(remove)*100/nrow(tax), digits = 3), "
"0","        "")\n"","
"0","        sum(output$removed), "
"0","        "" ("","
"0","        round(sum(output$removed)*100/sum(output$org), digits = 3),"
"0","        "")\n"","
"0","        ""Mean abundance removed:\t"", "
"0","        round(mean(output$prc_removed), digits = 3),""\n"","
"0","        ""Max abundance removed:\t"", "
"0","        round(max(output$prc_removed), digits = 3),""\n"", sep = """")"
"0","  }"
"0","  "
"0","  # Remove NA from tax table"
"0","  tax <- data.frame(tax_table(phy.out))"
"0","  "
"0","  for (i in seq(nrow(tax))) { "
"0","    if (is.na(tax[i,1])) {tax[i,1:7] <- ""Unknown"" "
"0","    } else if (is.na(tax[i,2])) {tax[i,2:7] <- paste(colnames(tax)[1],tax[i,1], sep = ""_"") "
"0","    } else if (is.na(tax[i,3])) {tax[i,3:7] <- paste(colnames(tax)[2],tax[i,2], sep = ""_"") "
"0","    } else if (is.na(tax[i,5])) {tax[i,5:7] <- paste(colnames(tax)[4],tax[i,4], sep = ""_"") "
"0","    } else if (is.na(tax[i,6])) {tax[i,6:7] <- paste(colnames(tax)[5],tax[i,5], sep = ""_"") "
"0","    } else if (is.na(tax[i,7])) {tax[i,7] <- paste(colnames(tax)[6],tax[i,6], sep = ""_"") "
"0","    }"
"0","  }"
"0","  "
"0","  # Insert modified tax_table in phyloseq object"
"0","  tax_table(phy.out) <- as.matrix(tax) "
"0","  "
"0","  # return the clean phyloseq object"
"0","  return(phy.out)"
"0","}"
"0",""
"0","# Save function"
"0","save(clean_taxa, file = ""scripts/clean_tax.Rdata"")"
"0",""
"0","# clear the environment and release memory"
"0","rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects."
"0","invisible(gc()) #free up memory and report the memory usage."
"0",""
